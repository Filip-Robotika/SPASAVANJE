#pragma once
#include "helper.h"
void RobotLine::radionica() {
  int cunjR = false;
  int cunjL = false;
  int labirint = false;
    int labirint2 = false;
  static int broj = 0;
  char simbol[10 + sizeof(char)];

  if (lineAny() == true and front() < 150 and broj == 0) {
    cunjR = true;
  }
  else if (lineAny() == true and front() < 150 and broj == 3) {
    cunjL = true;
  }

  else if (not line(0) and not line(8) and broj == 8){
    stop();
    
    display("ovo je napravio Filip, a ne Mislav!!!");
    delayMs(5000);
    labirint = true;
  }
  

  else if (line(0) and line(8) and broj == 1) {
    go(60, 60);
    delayMs(200);
    go(-90, 90);
    delayMs(500);
    broj++;
  }
  else if (line(0) and line(8) and broj == 2) {
    go(60, 60);
    delayMs(200);
    go(-90, 90);
    delayMs(500);
    broj++;
  }
  else if (line(5) and line(0) and not line(8) and broj == 4) {
    go(90, -90);
    delayMs(500);
 
    broj++;
    noLoopWithoutThis();

  }

  else if (line(0) and line(8) and broj == 5) {
    go(100, 100);
    delayMs(250);
    broj++;
  }
  else if (line(0) and line(8) and broj == 6) {
    go(-90, 90);
    delayMs(500);
    stop();
    delayMs(500);
    broj++;
  }
  else if (not lineAny() and broj == 7) {

    go(127, 127);
    delayMs(450);
    broj++;

  }
  else
    lineFollow();

    if (labirint == true){
      armOpen();
      wallRight();
    }
     
if (frontRight() < 120 and frontLeft() < 300){
  go (-90, 90);
  delayMs(500);
  while (not front() < 150){
      go (100 ,100);
       noLoopWithoutThis();
  }
stop();
delayMs(500);
armCatch();
stop();
end();
}
    
    



  if (cunjR == true) {
    go(-90, 90);
    delayMs(500);
    go(127, 127);
    delayMs(700);
    go(90, -90);
    delayMs(500);
    go(127, 127);
    delayMs(1000);
    go(100, -90);
    delayMs(500);
    while (not lineAny()) {
      go(115, 115);
      noLoopWithoutThis();
    }
    stop();
    delayMs(500);
    go(-90, 90);
    delayMs(500);
    broj++;
  }




  if (cunjL == true) {
    go(90, -90);
    delayMs(500);
    go(127, 127);
    delayMs(750);
    go(-90, 90);
    delayMs(500);
    go(127, 127);
    delayMs(1000);
    go(-90, 90);
    delayMs(500);
    while (not lineAny()) {
      go(127, 127);
      noLoopWithoutThis();
    }
    stop();
    delayMs(500);
    go(90, -90);
    delayMs(500);
    broj++;
  }
  sprintf(simbol, "%d", broj);
  display(simbol);

}


